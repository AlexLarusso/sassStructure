/*Write all your custom code here only.
Be careful and please write extends, includes and rules with variables on top.
Media-queries should be on bottom of the rules, even if it contains variables.
Children should be placed after media queries.
Example:
.style {
    color: #FFF;
}
.your-class {
    @extend .style;                                 <- extend
    @include: prefix (transform: rotate($deg))      <- include
    width: $width-value;                            <- variable
    font-size: $base-size;                          <- variable
    height: 30px;                                   <- constant
    position: absolute;                             <- constant
    &:hover {                                       <- pseudoclass
        color: #333;
    }
    @media (min-width: 768px) {                     <- media query
        width: 100%;
    }
    a {                                             <- child
        text-decoration: none;
    }
}
It helps other developers to recognize this part of code easier
and more efficiently.
If you need to use your css-rules in module pages only (e.g., GROUPS), then
create [name-of-module].scss (in this cause, groups.scss) and write your
code there. This file can be named how you want (e.g., join.scss).
Ask back-end developer how to include it in the project, DON'T use <head> tag
for this.*/
/*ONLY variables here, NO CODE pls*/
/*ONLY mixins here, NO CODE pls*/
/*Use this file to rewrite some standard classes of any frameworks and libraries,
such as Bootstrap, Foundation, Ionic, AngularJS, jQuery-UI etc.*/
/*Here ONLY styles for base elements, such as body, html, a, div, span etc.*/
/*Here ONLY rules for classes, which are generated by custom.js file*/
